{% extends "template-navody.njk" %}
{% from "input/macro.njk" import govukInput %}
{% from "date-input/macro.njk" import govukDateInput %}
{% from "button/macro.njk" import govukButton %}

{% block head %}
    <!--[if !IE 8]><!-->
    <link rel="stylesheet" href="/public/libs.css">
    <link rel="stylesheet" href="/public/app.css">
    <!--<![endif]-->
    <!--[if IE 8]>
    <link rel="stylesheet" href="/public/app-ie8.css">
    <![endif]-->
    <!--[if lt IE 9]>
    <script src="/vendor/html5-shiv/html5shiv.js"></script>
    <![endif]-->
{% endblock %}

{% block main %}
    <div class="govuk-width-container">
        <main class="govuk-main-wrapper">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <form method="post" novalidate>

                        <div class="govuk-form-group">
                            <label class="govuk-label govuk-label--m" for="municipality">
                                Obec
                            </label>
                            <span id="passport-number-hint" class="govuk-hint">
                                Začnite písať názov a následne si vyberte v zozname
                              </span>

                            <div id="municipality-field"></div>
                            <input type="text" name="municipality_email">
                        </div>

                        {{ govukInput({
                            label: {
                                text: "Passport number",
                                classes: "govuk-label--m"
                            },
                            hint: {
                                text: "For example, 502135326"
                            },
                            classes: "govuk-input--width-10",
                            id: "passport-number",
                            name: "passport-number",
                            value: values["passport-number"],
                            errorMessage: errors["passport-number"]
                        }) }}

                        {% set dateInputDayClass = "govuk-input--width-2" %}
                        {% set dateInputMonthClass = "govuk-input--width-2" %}
                        {% set dateInputYearClass = "govuk-input--width-4" %}

                        {% if errors["expiry-day"] %}
                            {% set dateInputDayClass = dateInputDayClass + " govuk-input--error" %}
                        {% endif %}
                        {% if errors["expiry-month"] %}
                            {% set dateInputMonthClass = dateInputMonthClass + " govuk-input--error" %}
                        {% endif %}
                        {% if errors["expiry-year"] %}
                            {% set dateInputYearClass = dateInputYearClass + " govuk-input--error" %}
                        {% endif %}

                        {{ govukDateInput({
                            id: "expiry",
                            namePrefix: "expiry",
                            fieldset: {
                                legend: {
                                    text: "Expiry date",
                                    classes: "govuk-fieldset__legend--m"
                                }
                            },
                            hint: {
                                text: "For example, 31 3 1980"
                            },
                            items: [
                                {
                                    classes: dateInputDayClass,
                                    name: "day",
                                    value: values["expiry-day"]
                                },
                                {
                                    classes: dateInputMonthClass,
                                    name: "month",
                                    value: values["expiry-month"]
                                },
                                {
                                    classes: dateInputYearClass,
                                    name: "year",
                                    value: values["expiry-year"]
                                }
                            ],
                            errorMessage: errors["expiry"]
                        }) }}

                        {{ govukButton({
                            text: "Continue"
                        }) }}
                    </form>

                </div>
            </div>
        </main>
    </div>
{% endblock %}

{% block bodyEnd %}
    <script src="/public/libs.js"></script>
    <script src="/public/all.js"></script>

    <style>
        .autocomplete__hint,
        .autocomplete__option {
            font-family: "Roboto", Arial, sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .autocomplete__hint,
        .autocomplete__input {
            padding: 5px 35px 5px 5px;
            font-family: "Roboto", Arial, sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            font-weight: 400;
            font-size: 16px;
            font-size: 1rem;
            line-height: 1.25;
            height: 40px;
        }

        @media (min-width: 40.0625em) {
            .autocomplete__hint,
            .autocomplete__input {
                font-size: 18px;
                font-size: 1.125rem;
                line-height: 1.33333;
            }
        }
    </style>

    <script>
      window.navodyDigitalFrontend.initAll();

      (function (settings, emailField, notFoundHandler) {
        var municipalities = []
        var municipalityEmails = {}

        for (var i = 0; i < SLOVAK_MUNICIPALITIES.length; i++)
        {
          var municipality = SLOVAK_MUNICIPALITIES[i]

          var searchText = replaceDiacritics(municipality[0]).toLowerCase()
          var label = municipality[0] + (municipality[2] !== '' ? (' (' + municipality[2] + ')') : '')

          SLOVAK_MUNICIPALITIES[i][3] = searchText.replace(/[ -]+/g, ' ')
          SLOVAK_MUNICIPALITIES[i][4] = label

          municipalities.push(label)
          municipalityEmails[label] = municipality[1]
        }

        function setEmailField(value) {
          emailField.value = municipalityEmails[value] ? municipalityEmails[value] : ''

          if (emailField.value === '')
          {
            notFoundHandler(value);
          }
        }

        settings['onConfirm'] = setEmailField;
        settings['source'] = function (query, populateResults) {
          var results = []

          if (query === '')
          {
            results = municipalities
          }
          else
          {
            var term = replaceDiacritics(query).toLowerCase()

            for (var i = 0; i < municipalities.length && results.length < 50; i++)
            {
              var municipality = SLOVAK_MUNICIPALITIES[i]

              if (municipality[4] === query)
              {
                results.push(municipality[4])
              }
              else
              {
                var index = municipality[3].indexOf(term)

                if (index > -1 && (index === 0 || municipality[3][index - 1] === ' '))
                {
                  results.push(municipality[4])
                }
              }
            }
          }

          results = results.sort(function (a, b) {
            return ((a < b) ? -1 : ((a > b) ? 1 : 0))
          })

          populateResults(results)
        };

        accessibleAutocomplete(settings);

        document.getElementById(settings.id).addEventListener('change', function (event) {
            setEmailField(event.target.value);
        });
      })({
        element: document.getElementById('municipality-field'),
        id: 'municipality',
        displayMenu: 'overlay',
        showAllValues: true,
        confirmOnBlur: false,
        autoselect: true,
        dropdownArrow: function (config) {
          return '<svg class="' + config.className + '" style="top: 8px;" viewBox="0 0 512 512" ><path d="M256,298.3L256,298.3L256,298.3l174.2-167.2c4.3-4.2,11.4-4.1,15.8,0.2l30.6,29.9c4.4,4.3,4.5,11.3,0.2,15.5L264.1,380.9  c-2.2,2.2-5.2,3.2-8.1,3c-3,0.1-5.9-0.9-8.1-3L35.2,176.7c-4.3-4.2-4.2-11.2,0.2-15.5L66,131.3c4.4-4.3,11.5-4.4,15.8-0.2L256,298.3  z"/></svg>'
        },
        tNoResults: function () {
          return 'Obec sa nenašla.'
        }
      }, document.querySelector('[name=municipality_email]'), function(municipality) {
        console.log('Selected municipality doesn\'t exist: ' + municipality);
      });

    </script>
{% endblock %}
